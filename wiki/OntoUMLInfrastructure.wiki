#summary Learn how to use the OntoUML infrastructure dynamically (via code)
#labels OntoUML,Infrastructure

<g:plusone size="medium"></g:plusone>

==OntoUML Infrastructure==

OLED uses an infrastructure which was former developed by Roberto Carrareto, latter enhanced by Antognoni Albuquerque and now constantly improved by us. This means that you can sort of "integrate" your project with OLED using this infrastructure to create your models.

To use the infrastruture you will need of the following libraries: 

  * br.ufes.inf.nemo.ontouml.refontouml_1.1.0.201301111500.jar (_located at trunk/br.ufes.inf.nemo.common/lib/refontouml_)

----
*Creating an OntoUML model Dinamycally*
----

_Coming soon..._

----
*Loading and Saving an OntoUML model*
----

{{{
/** Loading a reference ontouml model from a resource */
public Resource loadModel (String refontoumlpath) throws IOException 
{
  ResourceSet rset = new ResourceSetImpl();  
  rset.getResourceFactoryRegistry().getExtensionToFactoryMap().put("refontouml", 
    new RefOntoUMLResourceFactoryImpl());
  rset.getPackageRegistry().put(RefOntoUML.RefOntoUMLPackage.eNS_URI,      
    RefOntoUML.RefOntoUMLPackage.eINSTANCE);                
  File file = new File(refontoumlpath);
  URI fileURI = URI.createFileURI(file.getAbsolutePath());                
  Resource resource = rset.createResource(fileURI);                               
  Map<Object,Object> loadOptions =  
    ((XMLResourceImpl)resource).getDefaultLoadOptions();
  loadOptions.put(XMLResource.OPTION_USE_PARSER_POOL, new XMLParserPoolImpl());
  loadOptions.put(XMLResource.OPTION_DEFER_IDREF_RESOLUTION, Boolean.TRUE);
  resource.load(loadOptions);                
  return resource;                
}
}}}

{{{
/** Saving a reference ontouml model to a resource */
public Resource saveModel (String refontoumlpath, RefOntoUML.Package refmodel) 
{
  ResourceSet rset = new ResourceSetImpl();                                       
  rset.getResourceFactoryRegistry().getExtensionToFactoryMap().put("refontouml",
    new RefOntoUMLResourceFactoryImpl());                   
  rset.getPackageRegistry().put(RefOntoUML.RefOntoUMLPackage.eNS_URI,     
    RefOntoUML.RefOntoUMLPackage.eINSTANCE);
  URI fileURI = URI.createFileURI(refontoumlpath);    
  final Resource resource = rset.createResource(fileURI);     
  resource.getContents().add(refmodel);       
  try{
    resource.save(Collections.emptyMap());
  }catch(IOException e){
    e.printStackTrace();
  }
  return resource;                    
}
}}}

----
*Importing an OntoUML model into OLED*
----

  # Go to: File -> Import -> Ecore Instance (based on Reference Metamodel)
  # Choose the refontouml file and press Ok.