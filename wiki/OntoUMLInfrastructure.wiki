#summary Learn how to use the OntoUML infrastructure dynamically (via code)
#labels OntoUML,Infrastructure

<g:plusone size="medium"></g:plusone>

==OntoUML Infrastructure==

OLED uses an infrastructure which was former developed by Roberto Carrareto, latter enhanced by Antognoni Albuquerque and now constantly improved by us. This means that you can sort of "integrate" your project with OLED using this infrastructure to create your models.

To use the infrastruture you will need of the following Eclipse libraries: 

  * lpg.runtime.java
  * org.eclipse.emf.common
  * org.eclipse.emf.ecore.xmi
  * org.eclipse.emf.ecore
  * org.eclipse.ocl
  * org.eclipse.ocl.ecore

We recommend using the Kepler version since we used it to develop OLED. Besides these libraries, of course you will need our OntoUML infrastructure which can be found at: _trunk/br.ufes.inf.nemo.common/lib/refontouml/_

  * br.ufes.inf.nemo.ontouml_1.0.0.201409231448.jar 

----
*Loading and Saving an OntoUML model*
----

{{{
//Loading...
String refontoumlpath = "C:\\Users\\Guerson\\example.refontouml";
Resource resource = RefOntoUMLResourceUtil.loadModel(refontoumlpath);
RefOntoUML.Package root = resource.getContents().get(0);
}}}

{{{
//Saving...
RefOntoUMLResourceUtil.saveModel(refontoumlpath, root);
}}}

----
*Importing an OntoUML model into OLED*
----

  # Go to: File -> Import -> Ecore Instance (based on Reference Metamodel)
  # Choose the refontouml file and press Ok.

----
*Creating an OntoUML model Dinamycally*
----

_Coming soon..._